# Let this example of json file be positions emulation:
import json

positions_data = '''
{
    "my_timestamp": 1747132592.824234,
    "my_local_time": "2025-05-13 07:36:32",
    "positions": [
        {
            "ticket": 151125459,
            "symbol": "EURUSD",
            "type": "BUY",
            "volume": 0.02,
            "price_open": 1.11019,
            "sl": 1.09908,
            "tp": 1.13238,
            "price_current": 1.11058,
            "profit": 0.78,
            "swap": 0.0,
            "magic": 484583,
            "time_open": "2025-05-13 03:40:27",
            "time_raw": 1747107627,
            "comment": "Python Auto Trad",
            "risk_at_sl": 22.22,
            "profit_chain": [
                0.05,
                0.04,
                0.05,
                0.04,
                0.05,
                0.04,
                0.05,
                0.04,
                0.03,
                0.04,
                0.03,
                0.02,
                0.03,
                0.02,
                0.03,
                0.02,
                0.03,
                0.04,
                0.03,
                0.04
            ],
            "peak_profit": 0.2044695052198267,
            "CLOSE_SIGNAL": true
        },
        {
            "ticket": 151132891,
            "symbol": "USDJPY",
            "type": "SELL",
            "volume": 0.02,
            "price_open": 147.828,
            "sl": 149.307,
            "tp": 144.872,
            "price_current": 148.018,
            "profit": -2.57,
            "swap": 0.0,
            "magic": 969514,
            "time_open": "2025-05-13 04:21:36",
            "time_raw": 1747110096,
            "comment": "Python Auto Trad",
            "risk_at_sl": 2958.0,
            "profit_chain": [
                -0.12,
                -0.11,
                -0.12,
                -0.11,
                -0.12,
                -0.11,
                -0.12,
                -0.11,
                -0.12,
                -0.11,
                -0.12,
                -0.11,
                -0.12,
                -0.13,
                -0.12,
                -0.13,
                -0.12,
                -0.13,
                -0.12,
                -0.13
            ],
            "peak_profit": 0.12379251562626345,
            "CLOSE_SIGNAL": true
        },
        {
            "ticket": 151181669,
            "symbol": "XAUUSD",
            "type": "BUY",
            "volume": 0.02,
            "price_open": 3258.76,
            "sl": 3226.0,
            "tp": 3323.76,
            "price_current": 3253.88,
            "profit": -9.76,
            "swap": 0.0,
            "magic": 420360,
            "time_open": "2025-05-13 08:19:25",
            "time_raw": 1747124365,
            "comment": "Python Auto Trad",
            "risk_at_sl": 65.52,
            "profit_chain": [
                -0.14,
                -0.15,
                -0.14,
                -0.15,
                -0.16,
                -0.15,
                -0.16,
                -0.15,
                -0.16,
                -0.17,
                -0.18,
                -0.17,
                -0.18,
                -0.17,
                -0.16,
                -0.15,
                -0.16,
                -0.15,
                -0.14,
                -0.15
            ],
            "peak_profit": 0.20559967595035591,
            "CLOSE_SIGNAL": true
        },
        {
            "ticket": 151215705,
            "symbol": "USDCHF",
            "type": "SELL",
            "volume": 0.02,
            "price_open": 0.84084,
            "sl": 0.84922,
            "tp": 0.82399,
            "price_current": 0.84138,
            "profit": -1.28,
            "swap": 0.0,
            "magic": 951718,
            "time_open": "2025-05-13 11:10:20",
            "time_raw": 1747134620,
            "comment": "Python Auto Trad",
            "risk_at_sl": 16.76,
            "profit_chain": [
                -0.07,
                -0.06,
                -0.05,
                -0.06,
                -0.05,
                -0.06,
                -0.05,
                -0.06,
                -0.05,
                -0.06,
                -0.05,
                -0.06,
                -0.05,
                -0.06,
                -0.07,
                -0.08,
                -0.07,
                -0.06,
                -0.07,
                -0.06
            ],
            "peak_profit": 0.1379572808144296,
            "CLOSE_SIGNAL": true
        },
        {
            "ticket": 151216083,
            "symbol": "GBPUSD",
            "type": "BUY",
            "volume": 0.02,
            "price_open": 1.32114,
            "sl": 1.30773,
            "tp": 1.3473600000000001,
            "price_current": 1.32135,
            "profit": 0.42,
            "swap": 0.0,
            "magic": 270064,
            "time_open": "2025-05-13 11:14:01",
            "time_raw": 1747134841,
            "comment": "Python Auto Trad",
            "risk_at_sl": 26.82,
            "profit_chain": [
                -0.01,
                0.0,
                0.01,
                0.0,
                0.01,
                0.0,
                0.01,
                0.0,
                0.01,
                0.0,
                0.01,
                0.0,
                0.01,
                0.0,
                0.01,
                0.0,
                0.01,
                0.0,
                0.01,
                0.02
            ],
            "peak_profit": 0.06736606264287338,
            "CLOSE_SIGNAL": true
        },
        {
            "ticket": 151223015,
            "symbol": "SpotBrent",
            "type": "BUY",
            "volume": 0.08,
            "price_open": 65.795,
            "sl": 65.872,
            "tp": 67.091,
            "price_current": 65.955,
            "profit": 1.28,
            "swap": 0.0,
            "magic": 282839,
            "time_open": "2025-05-13 11:57:11",
            "time_raw": 1747137431,
            "comment": "Python Auto Trad",
            "risk_at_sl": 0.0,
            "profit_chain": [
                0.27,
                0.26,
                0.27,
                0.26,
                0.27,
                0.26,
                0.27,
                0.26,
                0.27,
                0.29,
                0.26,
                0.24,
                0.23,
                0.24,
                0.23,
                0.21,
                0.23,
                0.21,
                0.23,
                0.24
            ],
            "peak_profit": 0.3343719127593265,
            "CLOSE_SIGNAL": false
        },
        {
            "ticket": 151227732,
            "symbol": "ETHUSD",
            "type": "BUY",
            "volume": 0.08,
            "price_open": 2481.92,
            "sl": 2453.68,
            "tp": 2528.03,
            "price_current": 2475.99,
            "profit": -0.47,
            "swap": 0.0,
            "magic": 117992,
            "time_open": "2025-05-13 12:30:28",
            "time_raw": 1747139428,
            "comment": "Python Auto Trad",
            "risk_at_sl": 2.26,
            "profit_chain": [
                -0.32,
                -0.31,
                -0.34,
                -0.33,
                -0.32,
                -0.33,
                -0.32,
                -0.31,
                -0.3,
                -0.27,
                -0.26,
                -0.24,
                -0.26,
                -0.25,
                -0.23,
                -0.25,
                -0.24,
                -0.26,
                -0.25,
                -0.24
            ],
            "peak_profit": 0.2030685920577603,
            "CLOSE_SIGNAL": true
        },
        {
            "ticket": 151232155,
            "symbol": "BTCUSD",
            "type": "BUY",
            "volume": 0.02,
            "price_open": 103336.13,
            "sl": 102270.05,
            "tp": 105369.14,
            "price_current": 103408.77,
            "profit": 1.45,
            "swap": 0.0,
            "magic": 415165,
            "time_open": "2025-05-13 12:43:33",
            "time_raw": 1747140213,
            "comment": "Python Auto Trad",
            "risk_at_sl": 21.32,
            "profit_chain": [
                0.09,
                0.1,
                0.08,
                0.07,
                0.06,
                0.07,
                0.06,
                0.05,
                0.08,
                0.1,
                0.09,
                0.1,
                0.09,
                0.07,
                0.06,
                0.05,
                0.06,
                0.07,
                0.08,
                0.07
            ],
            "peak_profit": 0.2135845420183549,
            "CLOSE_SIGNAL": true
        },
        {
            "ticket": 151236620,
            "symbol": "BTCUSD",
            "type": "SELL",
            "volume": 0.02,
            "price_open": 103384.09,
            "sl": 104418.0,
            "tp": 101316.48,
            "price_current": 103446.88,
            "profit": -1.26,
            "swap": 0.0,
            "magic": 968722,
            "time_open": "2025-05-13 13:10:05",
            "time_raw": 1747141805,
            "comment": "Python Auto Trad",
            "risk_at_sl": 20.68,
            "profit_chain": [
                -0.08,
                -0.09,
                -0.08,
                -0.07,
                -0.05,
                -0.06,
                -0.05,
                -0.06,
                -0.05,
                -0.07,
                -0.09,
                -0.07,
                -0.09,
                -0.07,
                -0.06,
                -0.04,
                -0.05,
                -0.06,
                -0.07,
                -0.06
            ],
            "peak_profit": 0.10490975932562917,
            "CLOSE_SIGNAL": true
        },
        {
            "ticket": 151239933,
            "symbol": "ETHUSD",
            "type": "SELL",
            "volume": 0.08,
            "price_open": 2481.59,
            "sl": 2506.41,
            "tp": 2431.96,
            "price_current": 2478.99,
            "profit": 0.21,
            "swap": 0.0,
            "magic": 837881,
            "time_open": "2025-05-13 13:28:35",
            "time_raw": 1747142915,
            "comment": "Python Auto Trad",
            "risk_at_sl": 1.99,
            "profit_chain": [
                0.18,
                0.2,
                0.19,
                0.18,
                0.19,
                0.17,
                0.16,
                0.14,
                0.12,
                0.1,
                0.12,
                0.11,
                0.1,
                0.12,
                0.11,
                0.1,
                0.11,
                0.12,
                0.11,
                0.1
            ],
            "peak_profit": 0.2236469360369836,
            "CLOSE_SIGNAL": true
        },
        {
            "ticket": 151240514,
            "symbol": "SpotCrude",
            "type": "BUY",
            "volume": 0.08,
            "price_open": 62.607,
            "sl": 61.961,
            "tp": 63.839,
            "price_current": 62.567,
            "profit": -0.32,
            "swap": 0.0,
            "magic": 398616,
            "time_open": "2025-05-13 13:32:28",
            "time_raw": 1747143148,
            "comment": "Python Auto Trad",
            "risk_at_sl": 5.17,
            "profit_chain": [
                -0.03,
                -0.02,
                -0.03,
                -0.02,
                -0.03,
                -0.02,
                -0.03,
                -0.02,
                -0.03,
                -0.02,
                -0.05,
                -0.03,
                -0.02,
                -0.06,
                -0.08,
                -0.06,
                -0.08,
                -0.1,
                -0.08,
                -0.06
            ],
            "peak_profit": -0.015972654814953614,
            "CLOSE_SIGNAL": false
        }
    ]
}
'''



def list_tickets(positions_data):
    positions = json.loads(positions_data)
    pos = positions.get("positions", [])
    return {p["ticket"] for p in pos}



if __name__ == "__main__":
    # Example usage
    print(list_tickets(positions_data))
    
